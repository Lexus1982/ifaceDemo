
// Процедура - обработчик события ПриСозданииНаСервере
//
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ Параметры.Отбор.Свойство("СпособЛогирования") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Параметры.Отбор.СпособЛогирования) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры // ПриСозданииНаСервере()

// Процедура - обработчик события ПередЗаписьюНаСервере
//
&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого ТекЗапись Из ТекущийОбъект Цикл
		ТекЗапись.СпособЛогирования = ТекущийОбъект.Отбор.СпособЛогирования.Значение;
	КонецЦикла;
	
КонецПроцедуры // ПередЗаписьюНаСервере()

// Процедура - обработчик события ПриИзменении таблицы НаборЗаписей
//
&НаКлиенте
Процедура НаборЗаписейПриИзменении(Элемент)

	МожноЗаписывать = Истина;
	
	Для Каждого ТекЗапись Из НаборЗаписей Цикл
		Если ПустаяСтрока(ТекЗапись.ИмяЛога) Тогда
			МожноЗаписывать = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если МожноЗаписывать Тогда
		Записать();
	КонецЕсли;
	
КонецПроцедуры // НаборЗаписейПриИзменении()

// Процедура - обработчик события НачалоВыбора поля ИмяЛога таблицы НаборЗаписей
//
&НаКлиенте
Процедура ИмяЛогаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	ТекущиеДанные = Элементы.НаборЗаписей.ТекущиеДанные;
	
	Исключения = Новый Массив();
	
	Для Каждого ТекЗапись Из НаборЗаписей Цикл
		Если ПустаяСтрока(ТекЗапись.ИмяЛога) Тогда
			Продолжить;
		КонецЕсли;
		Если НЕ ТекущиеДанные = Неопределено Тогда
			Если ТекущиеДанные.ИмяЛога = ТекЗапись.ИмяЛога Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		Исключения.Добавить(ТекЗапись.ИмяЛога);
	КонецЦикла;
	
	Элементы.ИмяЛога.СписокВыбора.ЗагрузитьЗначения(ктв_ЛогированиеВызовСервера.ПолучитьИменаЛогов(Исключения));
	
КонецПроцедуры // ИмяЛогаНачалоВыбора()

