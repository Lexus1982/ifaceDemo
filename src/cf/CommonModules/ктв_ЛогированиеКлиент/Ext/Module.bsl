////////////////////////////////////////////////////////////////////////////////
// Подсистема "Логирование". (Процедуры выполняемые на клиенте)
//
////////////////////////////////////////////////////////////////////////////////


#Область ОбработкаЛогирования

// Процедура выполняет запись в лог, с использованием указанного способа логирования
//
// Параметры:
//	СпособЛогирования		- СправочникСсылка.			- используемый способ вывода лога
//							  ктв_СпособыЛогирования
//	Текст					- Строка					- текст выводимого сообщения
//	ПараметрыЗаписи			- Структура					- дополнительные параметры записи информации в лог
//
Процедура ЗаписатьВЛог(СпособЛогирования, Текст, ПараметрыЗаписи) Экспорт
	
	ВремОбработка =
		ктв_ОбработкиОбслуживанияВызовСервера.ПолучитьАдресОбработкиОбслуживанияЭлемента(СпособЛогирования,
																						 "Обработка");
	Если НЕ ктв_ОбработкиОбслуживанияВызовСервера.ЭтоОбработкаОбслуживания(ВремОбработка, "ВыводитьНаКлиенте") Тогда
		Возврат;
	КонецЕсли;
	
	ВремОбработка = ктв_ОбработкиОбслуживанияВызовСервера.ПолучитьАдресОбработкиОбслуживанияЭлемента(СпособЛогирования, "Обработка");
	
	Обработчик = ктв_ОбработкиОбслуживанияКлиент.ПолучитьФормуОбработкиОбслуживания(ВремОбработка, , "Форма");
		
	ТекстОшибки = "";
	
	Попытка
		
		Обработчик.ЗаписатьВЛог(Текст, ПараметрыЗаписи);
		
		Если ПараметрыЗаписи.Свойство("ТекстОшибки") Тогда
			ТекстОшибки = ПараметрыЗаписи.ТекстОшибки;
		КонецЕсли;
		
	Исключение
		ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Если ПараметрыЗаписи.Свойство("ТекстОшибки") Тогда
			ПараметрыЗаписи.ТекстОшибки = ПараметрыЗаписи.ТекстОшибки + Символы.ПС + ТекстОшибки;
		Иначе
			ПараметрыЗаписи.Вставить("ТекстОшибки", ТекстОшибки);
		КонецЕсли;
	КонецПопытки;
	
КонецПроцедуры //ЗаписатьВЛог()

#КонецОбласти 
